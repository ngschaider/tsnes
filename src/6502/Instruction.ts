import { AddressingMode } from "./AddressingMode";
import addressingModes from "./addressingModes";
import instructions from "./instructions";
import { uint8 } from "./types"

export class Instruction {
    name: string;
    opcode: uint8;
    addressingMode: AddressingMode;

    execute(): void {
        throw new Error("Not implemented (name=" + this.name + ")");
    }

    constructor(name: string, opcode: uint8, addressingMode: AddressingMode) {
        this.name = name;
        this.opcode = opcode;
        this.addressingMode = addressingMode;
    }
}

export const getInstructionByOpcode = (opcode: uint8) => {
    for(let instruction of instructionsList) {
        if(instruction.opcode === opcode) {
            return instruction;
        }
    }
}

const instructionsList: Instruction[] = [
    new instructions.BRK(0x00, new addressingModes.IMM()),
    new instructions.ORA(0x01, new addressingModes.IZX()),
    new instructions.XXX(0x02),
    new instructions.XXX(0x03),
    new instructions.NOP(0x04, new addressingModes.IMP()),
    new instructions.ORA(0x05, new addressingModes.ZP0()),
    new instructions.ASL(0x06, new addressingModes.ZP0()),
    new instructions.XXX(0x07),
    new instructions.PHP(0x08, new addressingModes.IMP()),
    new instructions.ORA(0x09, new addressingModes.IMM()),
    new instructions.ASL(0x0A, new addressingModes.IMP()),
    new instructions.XXX(0x0B),
    new instructions.NOP(0x0C, new addressingModes.IMP()),
    new instructions.ORA(0x0D, new addressingModes.ABS()),
    new instructions.ASL(0x0E, new addressingModes.ABS()),
    new instructions.XXX(0x0F),
    new instructions.BPL(0x10, new addressingModes.REL()),
    new instructions.ORA(0x11, new addressingModes.IZY()),
    new instructions.XXX(0x12),
    new instructions.XXX(0x13),
    new instructions.NOP(0x14, new addressingModes.IMP()),
    new instructions.ORA(0x15, new addressingModes.ZPX()),
    new instructions.ASL(0x16, new addressingModes.ZPX()),
    new instructions.XXX(0x17),
    new instructions.CLC(0x18, new addressingModes.IMP()),
    new instructions.ORA(0x19, new addressingModes.ABY()),
    new instructions.NOP(0x1A, new addressingModes.IMP()),
    new instructions.XXX(0x1B),
    new instructions.NOP(0x1C, new addressingModes.IMP()),
    new instructions.ORA(0x1D, new addressingModes.ABX()),
    new instructions.ASL(0x1E, new addressingModes.ABX()),
    new instructions.XXX(0x1F),
    new instructions.JSR(0x20, new addressingModes.ABS()),
    new instructions.AND(0x21, new addressingModes.IZX()),
    new instructions.XXX(0x22),
    new instructions.XXX(0x23),
    new instructions.BIT(0x24, new addressingModes.ZP0()),
    new instructions.AND(0x25, new addressingModes.ZP0()),
    new instructions.ROL(0x26, new addressingModes.ZP0()),
    new instructions.XXX(0x27),
    new instructions.PLP(0x28, new addressingModes.IMP()),
    new instructions.AND(0x29, new addressingModes.IMM()),
    new instructions.ROL(0x2A, new addressingModes.IMP()),
    new instructions.XXX(0x2B),
    new instructions.BIT(0x2C, new addressingModes.ABS()),
    new instructions.AND(0x2D, new addressingModes.ABS()),
    new instructions.ROL(0x2E, new addressingModes.ABS()),
    new instructions.XXX(0x2F),
    new instructions.BMI(0x30, new addressingModes.REL()),
    new instructions.AND(0x31, new addressingModes.IZY()),
    new instructions.XXX(0x32),
    new instructions.XXX(0x33),
    new instructions.NOP(0x34, new addressingModes.IMP()),
    new instructions.AND(0x35, new addressingModes.ZPX()),
    new instructions.ROL(0x36, new addressingModes.ZPX()),
    new instructions.XXX(0x37),
    new instructions.SEC(0x38, new addressingModes.IMP()),
    new instructions.AND(0x39, new addressingModes.ABY()),
    new instructions.NOP(0x3A, new addressingModes.IMP()),
    new instructions.XXX(0x3B),
    new instructions.NOP(0x3C, new addressingModes.IMP()),
    new instructions.AND(0x3D, new addressingModes.ABX()),
    new instructions.ROL(0x3E, new addressingModes.ABX()),
    new instructions.XXX(0x3F),
    new instructions.RTI(0x40, new addressingModes.IMP()),
    new instructions.EOR(0x41, new addressingModes.IZX()),
    new instructions.XXX(0x42),
    new instructions.XXX(0x43),
    new instructions.NOP(0x44, new addressingModes.IMP()),
    new instructions.EOR(0x45, new addressingModes.ZP0()),
    new instructions.LSR(0x46, new addressingModes.ZP0()),
    new instructions.XXX(0x47),
    new instructions.PHA(0x48, new addressingModes.IMP()),
    new instructions.EOR(0x49, new addressingModes.IMM()),
    new instructions.LSR(0x4A, new addressingModes.IMP()),
    new instructions.XXX(0x4B),
    new instructions.JMP(0x4C, new addressingModes.ABS()),
    new instructions.EOR(0x4D, new addressingModes.ABS()),
    new instructions.LSR(0x4E, new addressingModes.ABS()),
    new instructions.XXX(0x4F),
    new instructions.BVC(0x50, new addressingModes.REL()),
    new instructions.EOR(0x51, new addressingModes.IZY()),
    new instructions.XXX(0x52),
    new instructions.XXX(0x53),
    new instructions.NOP(0x54, new addressingModes.IMP()),
    new instructions.EOR(0x55, new addressingModes.ZPX()),
    new instructions.LSR(0x56, new addressingModes.ZPX()),
    new instructions.XXX(0x57),
    new instructions.CLI(0x58, new addressingModes.IMP()),
    new instructions.EOR(0x59, new addressingModes.ABY()),
    new instructions.NOP(0x5A, new addressingModes.IMP()),
    new instructions.XXX(0x5B),
    new instructions.NOP(0x5C, new addressingModes.IMP()),
    new instructions.EOR(0x5D, new addressingModes.ABX()),
    new instructions.LSR(0x5E, new addressingModes.ABX()),
    new instructions.XXX(0x5F),
    new instructions.RTS(0x60, new addressingModes.IMP()),
    new instructions.ADC(0x61, new addressingModes.IZX()),
    new instructions.XXX(0x62),
    new instructions.XXX(0x63),
    new instructions.NOP(0x64, new addressingModes.IMP()),
    new instructions.ADC(0x65, new addressingModes.ZP0()),
    new instructions.ROR(0x66, new addressingModes.ZP0()),
    new instructions.XXX(0x67),
    new instructions.PLA(0x68, new addressingModes.IMP()),
    new instructions.ADC(0x69, new addressingModes.IMM()),
    new instructions.ROR(0x6A, new addressingModes.IMP()),
    new instructions.XXX(0x6B),
    new instructions.JMP(0x6C, new addressingModes.IND()),
    new instructions.ADC(0x6D, new addressingModes.ABS()),
    new instructions.ROR(0x6E, new addressingModes.ABS()),
    new instructions.XXX(0x6F),
    new instructions.BVS(0x70, new addressingModes.REL()),
    new instructions.ADC(0x71, new addressingModes.IZY()),
    new instructions.XXX(0x72),
    new instructions.XXX(0x73),
    new instructions.NOP(0x74, new addressingModes.IMP()),
    new instructions.ADC(0x75, new addressingModes.ZPX()),
    new instructions.ROR(0x76, new addressingModes.ZPX()),
    new instructions.XXX(0x77),
    new instructions.SEI(0x78, new addressingModes.IMP()),
    new instructions.ADC(0x79, new addressingModes.ABY()),
    new instructions.NOP(0x7A, new addressingModes.IMP()),
    new instructions.XXX(0x7B),
    new instructions.NOP(0x7C, new addressingModes.IMP()),
    new instructions.ADC(0x7D, new addressingModes.ABX()),
    new instructions.ROR(0x7E, new addressingModes.ABX()),
    new instructions.XXX(0x7F),
    new instructions.NOP(0x80, new addressingModes.IMP()),
    new instructions.STA(0x81, new addressingModes.IZX()),
    new instructions.NOP(0x82, new addressingModes.IMP()),
    new instructions.XXX(0x83),
    new instructions.STY(0x84, new addressingModes.ZP0()),
    new instructions.STA(0x85, new addressingModes.ZP0()),
    new instructions.STX(0x86, new addressingModes.ZP0()),
    new instructions.XXX(0x87),
    new instructions.DEY(0x88, new addressingModes.IMP()),
    new instructions.NOP(0x89, new addressingModes.IMP()),
    new instructions.TXA(0x8A, new addressingModes.IMP()),
    new instructions.XXX(0x8B),
    new instructions.STY(0x8C, new addressingModes.ABS()),
    new instructions.STA(0x8D, new addressingModes.ABS()),
    new instructions.STX(0x8E, new addressingModes.ABS()),
    new instructions.XXX(0x8F),
    new instructions.BCC(0x90, new addressingModes.REL()),
    new instructions.STA(0x91, new addressingModes.IZY()),
    new instructions.XXX(0x92),
    new instructions.XXX(0x93),
    new instructions.STY(0x94, new addressingModes.ZPX()),
    new instructions.STA(0x95, new addressingModes.ZPX()),
    new instructions.STX(0x96, new addressingModes.ZPY()),
    new instructions.XXX(0x97),
    new instructions.TYA(0x98, new addressingModes.IMP()),
    new instructions.STA(0x99, new addressingModes.ABY()),
    new instructions.TXS(0x9A, new addressingModes.IMP()),
    new instructions.XXX(0x9B),
    new instructions.NOP(0x9C, new addressingModes.IMP()),
    new instructions.STA(0x9D, new addressingModes.ABX()),
    new instructions.XXX(0x9E),
    new instructions.XXX(0x9F),
    new instructions.LDY(0xA0, new addressingModes.IMM()),
    new instructions.LDA(0xA1, new addressingModes.IZX()),
    new instructions.LDX(0xA2, new addressingModes.IMM()),
    new instructions.XXX(0xA3),
    new instructions.LDY(0xA4, new addressingModes.ZP0()),
    new instructions.LDA(0xA5, new addressingModes.ZP0()),
    new instructions.LDX(0xA6, new addressingModes.ZP0()),
    new instructions.XXX(0xA7),
    new instructions.TAY(0xA8, new addressingModes.IMP()),
    new instructions.LDA(0xA9, new addressingModes.IMM()),
    new instructions.TAX(0xAA, new addressingModes.IMP()),
    new instructions.XXX(0xAB),
    new instructions.LDY(0xAC, new addressingModes.ABS()),
    new instructions.LDA(0xAD, new addressingModes.ABS()),
    new instructions.LDX(0xAE, new addressingModes.ABS()),
    new instructions.XXX(0xAF),
    new instructions.BCS(0xB0, new addressingModes.REL()),
    new instructions.LDA(0xB1, new addressingModes.IZY()),
    new instructions.XXX(0xB2),
    new instructions.XXX(0xB3),
    new instructions.LDY(0xB4, new addressingModes.ZPX()),
    new instructions.LDA(0xB5, new addressingModes.ZPX()),
    new instructions.LDX(0xB6, new addressingModes.ZPY()),
    new instructions.XXX(0xB7),
    new instructions.CLV(0xB8, new addressingModes.IMP()),
    new instructions.LDA(0xB9, new addressingModes.ABY()),
    new instructions.TSX(0xBA, new addressingModes.IMP()),
    new instructions.XXX(0xBB),
    new instructions.LDY(0xBC, new addressingModes.ABX()),
    new instructions.LDA(0xBD, new addressingModes.ABX()),
    new instructions.LDX(0xBE, new addressingModes.ABY()),
    new instructions.XXX(0xBF),
    new instructions.CPY(0xC0, new addressingModes.IMM()),
    new instructions.CMP(0xC1, new addressingModes.IZX()),
    new instructions.NOP(0xC2, new addressingModes.IMP()),
    new instructions.XXX(0xC3),
    new instructions.CPY(0xC4, new addressingModes.ZP0()),
    new instructions.CMP(0xC5, new addressingModes.ZP0()),
    new instructions.DEC(0xC6, new addressingModes.ZP0()),
    new instructions.XXX(0xC7),
    new instructions.INY(0xC8, new addressingModes.IMP()),
    new instructions.CMP(0xC9, new addressingModes.IMM()),
    new instructions.DEX(0xCA, new addressingModes.IMP()),
    new instructions.XXX(0xCB),
    new instructions.CPY(0xCC, new addressingModes.ABS()),
    new instructions.CMP(0xCD, new addressingModes.ABS()),
    new instructions.DEC(0xCE, new addressingModes.ABS()),
    new instructions.XXX(0xCF),
    new instructions.BNE(0xD0, new addressingModes.REL()),
    new instructions.CMP(0xD1, new addressingModes.IZY()),
    new instructions.XXX(0xD2),
    new instructions.XXX(0xD3),
    new instructions.NOP(0xD4, new addressingModes.IMP()),
    new instructions.CMP(0xD5, new addressingModes.ZPX()),
    new instructions.DEC(0xD6, new addressingModes.ZPX()),
    new instructions.XXX(0xD7),
    new instructions.CLD(0xD8, new addressingModes.IMP()),
    new instructions.CMP(0xD9, new addressingModes.ABY()),
    new instructions.NOP(0xDA, new addressingModes.IMP()),
    new instructions.XXX(0xDB),
    new instructions.NOP(0xDC, new addressingModes.IMP()),
    new instructions.CMP(0xDD, new addressingModes.ABX()),
    new instructions.DEC(0xDE, new addressingModes.ABX()),
    new instructions.XXX(0xDF),
    new instructions.CPX(0xE0, new addressingModes.IMM()),
    new instructions.SBC(0xE1, new addressingModes.IZX()),
    new instructions.NOP(0xE2, new addressingModes.IMP()),
    new instructions.XXX(0xE3),
    new instructions.CPX(0xE4, new addressingModes.ZP0()),
    new instructions.SBC(0xE5, new addressingModes.ZP0()),
    new instructions.INC(0xE6, new addressingModes.ZP0()),
    new instructions.XXX(0xE7),
    new instructions.INX(0xE8, new addressingModes.IMP()),
    new instructions.SBC(0xE9, new addressingModes.IMM()),
    new instructions.NOP(0xEA, new addressingModes.IMP()),
    new instructions.SBC(0xEB, new addressingModes.IMP()),
    new instructions.CPX(0xEC, new addressingModes.ABS()),
    new instructions.SBC(0xED, new addressingModes.ABS()),
    new instructions.INC(0xEE, new addressingModes.ABS()),
    new instructions.XXX(0xEF),
    new instructions.BEQ(0xF0, new addressingModes.REL()),
    new instructions.SBC(0xF1, new addressingModes.IZY()),
    new instructions.XXX(0xF2),
    new instructions.XXX(0xF3),
    new instructions.NOP(0xF4, new addressingModes.IMP()),
    new instructions.SBC(0xF5, new addressingModes.ZPX()),
    new instructions.INC(0xF6, new addressingModes.ZPX()),
    new instructions.XXX(0xF7),
    new instructions.SED(0xF8, new addressingModes.IMP()),
    new instructions.SBC(0xF9, new addressingModes.ABY()),
    new instructions.NOP(0xFA, new addressingModes.IMP()),
    new instructions.XXX(0xFB),
    new instructions.NOP(0xFC, new addressingModes.IMP()),
    new instructions.SBC(0xFD, new addressingModes.ABX()),
    new instructions.INC(0xFE, new addressingModes.ABX()),
    new instructions.XXX(0xFF),
];